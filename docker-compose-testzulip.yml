version: "2"
services:
  TEST_database:
    container_name: TEST_zulip-postgres
    image: "zulip/zulip-postgresql:14"
    pull_policy: always
    restart: unless-stopped
    environment:
      POSTGRES_DB: "zulip"
      POSTGRES_USER: "zulip"
      # Note that you need to do a manual `ALTER ROLE` query if you
      # change this on a system after booting the postgres container
      # the first time on a host.  Instructions are available in README.md.
      POSTGRES_PASSWORD: "${TESTZULIP_POSTGRESS_PASS:?TESTZULIP_POSTGRESS_PASS}"
    volumes:
      - "TEST_postgresql-14:/var/lib/postgresql/data:rw"
  TEST_memcached:
    container_name: TEST_zulip-memcached
    image: "memcached:1-alpine"
    pull_policy: always
    restart: unless-stopped
    command:
      - "sh"
      - "-euc"
      - |
        echo 'mech_list: plain' > "$$SASL_CONF_PATH"
        echo "zulip@$$HOSTNAME:$$MEMCACHED_PASSWORD" > "$$MEMCACHED_SASL_PWDB"
        echo "zulip@localhost:$$MEMCACHED_PASSWORD" >> "$$MEMCACHED_SASL_PWDB"
        exec memcached -S
    environment:
      SASL_CONF_PATH: "/home/memcache/memcached.conf"
      MEMCACHED_SASL_PWDB: "/home/memcache/memcached-sasl-db"
      MEMCACHED_PASSWORD: "${TESTZULIP_MEMCACHED_PASS:?TESTZULIP_MEMCACHED_PASS}"
  TEST_rabbitmq:
    container_name: TEST_zulip-rabbitmq
    image: "rabbitmq:3.7.7"
    pull_policy: always
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: "zulip"
      RABBITMQ_DEFAULT_PASS: "${TESTZULIP_RABBITMQ_PASS:?TESTZULIP_RABBITMQ_PASS}"
    volumes:
      - "TEST_rabbitmq:/var/lib/rabbitmq:rw"
  TEST_redis:
    container_name: TEST_zulip-redis
    image: "redis:7-alpine"
    pull_policy: always
    restart: unless-stopped
    command:
      - "sh"
      - "-euc"
      - |
        echo "requirepass '$$REDIS_PASSWORD'" > /etc/redis.conf
        exec redis-server /etc/redis.conf
    environment:
      REDIS_PASSWORD: "${TESTZULIP_REDIS_PASS:?TESTZULIP_REDIS_PASS}"
    volumes:
      - "TEST_redis:/data:rw"
  TEST_zulip:
    container_name: TEST_zulip-zulip
    image: "zulip/docker-zulip"
    build:
      context: docker-zulip
      dockerfile: Dockerfile
    pull_policy: build
    restart: unless-stopped
    environment:
      DB_HOST: "TEST_database"
      DB_HOST_PORT: "5432"
      DB_USER: "zulip"
      SSL_CERTIFICATE_GENERATION: "self-signed"
      SETTING_MEMCACHED_LOCATION: "TEST_memcached:11211"
      SETTING_RABBITMQ_HOST: "TEST_rabbitmq"
      SETTING_REDIS_HOST: "TEST_redis"
      SECRETS_email_password: "123456789"
      SECRETS_rabbitmq_password: "${TESTZULIP_RABBITMQ_PASS:?TESTZULIP_RABBITMQ_PASS}"
      SECRETS_postgres_password: "${TESTZULIP_POSTGRESS_PASS:?TESTZULIP_POSTGRESS_PASS}"
      SECRETS_memcached_password: "${TESTZULIP_MEMCACHED_PASS:?TESTZULIP_MEMCACHED_PASS}"
      SECRETS_redis_password: "${TESTZULIP_REDIS_PASS:?TESTZULIP_REDIS_PASS}"
      SECRETS_secret_key: "${TESTZULIP_SECRET_KEY:?TESTZULIP_SECRET_KEY}"
      SETTING_EXTERNAL_HOST: "testchat.bojidar-bg.dev"
      SETTING_ZULIP_ADMINISTRATOR: "fenerir77@gmail.com"
      SETTING_EMAIL_HOST: "" # e.g. smtp.example.com
      SETTING_EMAIL_HOST_USER: "noreply@example.com"
      SETTING_EMAIL_PORT: "587"
      # It seems that the email server needs to use ssl or tls and can't be used without it
      SETTING_EMAIL_USE_SSL: "False"
      SETTING_EMAIL_USE_TLS: "True"
      ZULIP_AUTH_BACKENDS: "EmailAuthBackend"
      # Uncomment this when configuring the mobile push notifications service
      # SETTING_PUSH_NOTIFICATION_BOUNCER_URL: 'https://push.zulipchat.com'
      VIRTUAL_HOST: "testchat.bojidar-bg.dev"
      LETSENCRYPT_HOST: "testchat.bojidar-bg.dev"
      DISABLE_HTTPS: true
      LOADBALANCER_IPS: 172.18.0.0/16
      SETTING_EMAIL_BACKEND: 'django.core.mail.backends.filebased.EmailBackend'
      SETTING_EMAIL_FILE_PATH: '/var/log/zulip/emails'
    volumes:
      - "TEST_zulip:/data:rw"
    ulimits:
      nofile:
        soft: 1000000
        hard: 1048576
volumes:
  TEST_zulip:
  TEST_postgresql-14:
  TEST_rabbitmq:
  TEST_redis:
